<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pm.pmapi.mbg.mapper.TabUserMapper">
  <resultMap id="BaseResultMap" type="com.pm.pmapi.mbg.model.TabUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="nav" jdbcType="BIGINT" property="nav" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="unthorized" jdbcType="INTEGER" property="unthorized" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nav, student_id, open_id, username, password, avatar, phone, description, register_time, 
    login_time, unthorized, status
  </sql>
  <select id="selectByExample" parameterType="com.pm.pmapi.mbg.model.TabUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_user
    where id = #{id,jdbcType=BIGINT}
      and nav = #{nav,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from tab_user
    where id = #{id,jdbcType=BIGINT}
      and nav = #{nav,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pm.pmapi.mbg.model.TabUserExample">
    delete from tab_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pm.pmapi.mbg.model.TabUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_user (nav, student_id, open_id, 
      username, password, avatar, 
      phone, description, register_time, 
      login_time, unthorized, status
      )
    values (#{nav,jdbcType=BIGINT}, #{studentId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{unthorized,jdbcType=INTEGER}, #{status,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pm.pmapi.mbg.model.TabUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nav != null">
        nav,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="unthorized != null">
        unthorized,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nav != null">
        #{nav,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unthorized != null">
        #{unthorized,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pm.pmapi.mbg.model.TabUserExample" resultType="java.lang.Long">
    select count(*) from tab_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nav != null">
        nav = #{record.nav,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unthorized != null">
        unthorized = #{record.unthorized,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_user
    set id = #{record.id,jdbcType=BIGINT},
      nav = #{record.nav,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      unthorized = #{record.unthorized,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pm.pmapi.mbg.model.TabUser">
    update tab_user
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unthorized != null">
        unthorized = #{unthorized,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and nav = #{nav,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pm.pmapi.mbg.model.TabUser">
    update tab_user
    set student_id = #{studentId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      unthorized = #{unthorized,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
      and nav = #{nav,jdbcType=BIGINT}
  </update>
</mapper>